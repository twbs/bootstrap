---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getConfig } from '@libs/config'
import type { LayoutOverridesHTMLAttributes } from '@libs/layout'
import { getSlug, processMarkdownToHtml } from '@libs/utils'
import { getVersionedDocsPath } from '@libs/path'
import Ads from '@components/Ads.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import DocsSidebar from '@components/DocsSidebar.astro'
import TableOfContents from '@components/TableOfContents.astro'
import ReferenceTable from '@components/ReferenceTable.astro'
import { getData } from '@libs/data'
import GitHubIcon from '@components/icons/GitHubIcon.astro'
import MdnIcon from '@components/icons/MdnIcon.astro'
import CssTricksIcon from '@components/icons/CssTricksIcon.astro'

interface NavigationPage {
  title: string
  url: string
  groupTitle: string
}

interface Props {
  frontmatter: CollectionEntry<'docs'>['data']
  headings?: MarkdownHeading[]
  id: CollectionEntry<'docs'>['id']
}

// Get sidebar data using the data library
const sidebar = getData('sidebar')

const { frontmatter, headings, id } = Astro.props
const { slug } = Astro.params

// Extract the directory/section from the ID (format: "directory/filename.mdx")
const parentDirectory = id.includes('/') ? id.split('/')[0] : ''

const bodyProps: LayoutOverridesHTMLAttributes<'body'> = {}

if (frontmatter.toc) {
  bodyProps['data-bs-spy'] = 'scroll'
  bodyProps['data-bs-target'] = '#TableOfContents'
}

// Find previous and next pages for navigation
let prevPage: NavigationPage | undefined
let nextPage: NavigationPage | undefined

// Create a flat array of all pages with their groups
const allPages = sidebar.flatMap((group) => {
  if (!group.pages) return []
  return group.pages.map((page) => ({
    title: page.title,
    url: `/docs/${getConfig().docs_version}/${getSlug(group.title)}/${getSlug(page.title)}/`,
    groupTitle: group.title
  }))
})

// Find the current page index
const currentPageIndex = allPages.findIndex(
  (page) => page.url === `/docs/${getConfig().docs_version}/${slug}/`
)

if (currentPageIndex > 0) {
  prevPage = allPages[currentPageIndex - 1]
}

if (currentPageIndex < allPages.length - 1) {
  nextPage = allPages[currentPageIndex + 1]
}
---

<BaseLayout {...Astro.props} layout="docs" overrides={{ body: bodyProps }}>
  <div slot="main" class="container-2xl bd-gutter mt-3 my-md-4 bd-layout">
    <aside class="bd-sidebar">
      <div class="offcanvas-lg offcanvas-start" tabindex="-1" id="bdSidebar" aria-labelledby="bdSidebarOffcanvasLabel">
        <div class="offcanvas-header border-bottom">
          <h5 class="offcanvas-title" id="bdSidebarOffcanvasLabel">Browse docs</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="offcanvas"
            aria-label="Close"
            data-bs-target="#bdSidebar"></button>
        </div>

        <div class="offcanvas-body">
          <DocsSidebar />
        </div>
      </div>
    </aside>

    <main class="bd-main order-1">
      <div class="bd-intro pt-2 ps-lg-2">
        <h1 class="bd-title mb-0" id="content">{frontmatter.title}</h1>
        <div class="bd-subtitle">
          {frontmatter.description && <Fragment set:html={processMarkdownToHtml(frontmatter.description)} />}
        </div>
        <div class="mb-3 mb-md-0 d-flex text-nowrap">
          {
            frontmatter.added &&
              ((frontmatter.added.show_badge !== undefined && frontmatter.added.show_badge === true) ||
                frontmatter.added.show_badge === undefined) && (
                <small class="d-inline-flex px-2 py-1 fw-semibold text-success-emphasis bg-success-subtle border border-success-subtle rounded-2 me-2">
                  Added in v{frontmatter.added.version}
                </small>
              )
          }
          <a
            class="btn btn-secondary-text btn-sm"
            href={`${getConfig().repo}/blob/v${getConfig().current_version}/site/src/content/docs/${id}`}
            title="View and edit this file on GitHub"
            target="_blank"
            rel="noopener"
          >
            <GitHubIcon height={16} width={16} class="bi" />
            View on GitHub
          </a>
          {
            frontmatter.mdn && (
              <a
                class="btn btn-secondary-text btn-sm"
                href={frontmatter.mdn}
                title="View on MDN"
                target="_blank"
                rel="noopener"
              >
                <MdnIcon height={16} width={16} class="bi" />
                MDN
              </a>
            )
          }
          {
            frontmatter.csstricks && (
              <a
                class="btn btn-secondary-text btn-sm"
                href={typeof frontmatter.csstricks === 'string' ? frontmatter.csstricks : frontmatter.csstricks.url}
                title="View on CSS-Tricks"
                target="_blank"
                rel="noopener"
              >
                <CssTricksIcon height={16} width={16} class="bi" />
                {typeof frontmatter.csstricks === 'string' ? 'CSS-Tricks' : (frontmatter.csstricks.label || 'CSS-Tricks')}
              </a>
            )
          }
        </div>
      </div>


      <div class="bd-toc mt-3 mb-5 my-lg-0 mb-lg-5 px-sm-1 text-body-secondary">
        {
          frontmatter.toc && headings && (
            <button
              class="btn btn-link p-md-0 mb-2 mb-md-0 text-decoration-none bd-toc-toggle d-flex align-items-center d-md-none"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#tocContents"
              aria-expanded="false"
              aria-controls="tocContents"
            >
              On this page
              <svg class="bi d-md-none ms-2" aria-hidden="true">
                <use xlink:href="#chevron-expand" />
              </svg>
            </button>
            <div class="d-none d-md-block h6 my-2 ms-3" id="docs-tocs">On this page</div>
            <hr class="d-none d-md-block my-2 ms-3" />
            <div class="collapse bd-toc-collapse" id="tocContents">
              <nav id="TableOfContents" aria-labelledby="docs-tocs">
                <TableOfContents headings={headings} />
              </nav>
            </div>
          )
        }
        <Ads />
      </div>

      <div class="bd-content ps-lg-2">
        {
          frontmatter.sections && (
            <div class="grid mb-5">
              {frontmatter.sections.map((section) => (
                <div class="col-md-6">
                  <a
                    class="d-block text-decoration-none"
                    href={getVersionedDocsPath(
                      `${parentDirectory ? parentDirectory + '/' : ''}${getSlug(section.title)}/`
                    )}
                  >
                    <strong class="d-block h5 mb-0">{section.title}</strong>
                    <span class="text-secondary">{section.description}</span>
                  </a>
                </div>
              ))}
            </div>
          )
        }

        {
          frontmatter.reference && (
            <div class="mb-5">
              <ReferenceTable reference={frontmatter.reference} />
            </div>
          )
        }

        <slot />

        <nav class="bd-links-nav py-5 mt-5 border-top">
          <div class="grid">
            <div class="col-6">
              {
                prevPage && (
                  <a href={prevPage.url} class="d-block p-3 text-decoration-none rounded-3">
                    <div class="text-secondary small">Previous</div>
                    <div class="fw-semibold">← {prevPage.title}</div>
                    <div class="text-secondary small">{prevPage.groupTitle}</div>
                  </a>
                )
              }
            </div>
            <div class="col-6">
              {
                nextPage && (
                  <a href={nextPage.url} class="d-block p-3 text-decoration-none text-end rounded-3">
                    <div class="text-secondary small">Next</div>
                    <div class="fw-semibold">{nextPage.title} →</div>
                    <div class="text-secondary small">{nextPage.groupTitle}</div>
                  </a>
                )
              }
            </div>
          </div>
        </nav>
      </div>
    </main>
  </div>
</BaseLayout>
